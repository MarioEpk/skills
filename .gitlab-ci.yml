stages:
  - build
  - docker
  - deploy

variables:
  SCRIPTS_DIR: "config/scripts"
  RULES_CHANGES_PATH: "**/*"
  GCP_PROJECT: moro-artifacts
  GCP_ARTIFACT_REGISTRY: "$GCP_PROJECT/morosystems-docker"
  GCP_SERVICE_ACCOUNT: morosystems-admin@moro-artifacts.iam.gserviceaccount.com
  GCLOUD_VERSION: "381.0.0-debian_component_based"
  DOCKER_HOST: "tcp://docker:2376"
  DOCKER_DRIVER: overlay2
  DOCKER_TLS_CERTDIR: "/certs"
  DOCKER_TLS_VERIFY: 1
  DOCKER_CERT_PATH: "$DOCKER_TLS_CERTDIR/client"
  DOCKER_IMAGE_PREFIX: "europe-west3-docker.pkg.dev/$GCP_ARTIFACT_REGISTRY"
  OAUTH2_API_URL: "/api"
  OAUTH2_CLIENT_ID: $oauth2_client_id

default:
  services:
    - name: docker:dind

.api-job-type:
  variables:
    GRADLE_OPTS: "-Dorg.gradle.daemon=false"
    RULES_CHANGES_PATH: "api/**/*"

.client-job-type:
  variables:
    RULES_CHANGES_PATH: "client/**/*"

.client-build-job-type:
  image: node:12.22
  stage: build
  extends: .client-job-type
  cache:
    key:
      files:
        - client/package.json
    paths:
      - client/node_modules/
  artifacts:
    paths:
      - client/dist/
  script:
    - sh $(pwd)/${SCRIPTS_DIR}/client-build.sh

api-build:
  image: gradle:7.1.0-jdk11
  stage: build
  extends: .api-job-type
  artifacts:
    paths:
      - api/build/libs/
    expire_in: 1 day
  before_script:
    - export GRADLE_USER_HOME=api/.gradle
  cache:
    key:
      files:
        - api/gradle/wrapper/gradle-wrapper.properties
    paths:
      - api/.gradle/wrapper/
      - api/.gradle/caches/
      - api/.gradle/notifications/
  script:
    - sh $(pwd)/${SCRIPTS_DIR}/api-build.sh

client-build:
  extends: .client-build-job-type
  artifacts:
    expire_in: 1 day

client-build-tagged:
  extends: .client-build-job-type
  rules:
    - if: $CI_COMMIT_TAG
  artifacts:
    expire_in: 30 days

api-docker:
  image: gradle:6.9.3-jdk11-alpine
  stage: docker
  extends: .api-job-type
  needs: [ "api-build" ]
  script:
    - sh $(pwd)/${SCRIPTS_DIR}/api-docker.sh

client-docker:
  image: gradle:6.9.3-jdk11-alpine
  stage: docker
  extends: .client-job-type
  needs: [ "client-build" ]
  script:
    - sh $(pwd)/${SCRIPTS_DIR}/client-docker.sh

deploy-docker-image-to-kubernetes-job:
    image: google/cloud-sdk:$GCLOUD_VERSION
    stage: deploy
    when: manual
    needs: [ "api-docker", "client-docker" ]
    script:
      - echo "Deploy Docker image to Google Kubernetes Engine..."
      - cd config/scripts
      - ./deploy.sh
      - echo "Docker image successfully deployed to Google Kubernetes Engine."
